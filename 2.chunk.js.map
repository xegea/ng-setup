{"version":3,"sources":["webpack:///./src/app/pages/server/server.module.ts","webpack:///./~/rxjs/add/operator/catch.js?33c3","webpack:///./~/rxjs/add/operator/toPromise.js?0121","webpack:///./~/rxjs/operator/toPromise.js?075a","webpack:///./src/app/pages/server/server.component.ts","webpack:///./src/app/pages/server/components/serverValuesForm/components/dnssuffixInput/dnssuffix.service.ts","webpack:///./src/app/pages/server/components/serverValuesForm/components/dnssuffixInput/dnssuffixInput.component.ts","webpack:///./src/app/pages/server/components/serverValuesForm/components/gatewayInput/gateway.service.ts","webpack:///./src/app/pages/server/components/serverValuesForm/components/gatewayInput/gatewayInput.component.ts","webpack:///./src/app/pages/server/components/serverValuesForm/components/hostnameInput/hostname.service.ts","webpack:///./src/app/pages/server/components/serverValuesForm/components/hostnameInput/hostnameInput.component.ts","webpack:///./src/app/pages/server/components/serverValuesForm/components/ipaddressInput/ipaddress.service.ts","webpack:///./src/app/pages/server/components/serverValuesForm/components/ipaddressInput/ipaddressInput.component.ts","webpack:///./src/app/pages/server/components/serverValuesForm/components/netmaskInput/netmask.service.ts","webpack:///./src/app/pages/server/components/serverValuesForm/components/netmaskInput/netmaskInput.component.ts","webpack:///./src/app/pages/server/components/serverValuesForm/components/timezoneInput/timeZoneInput.component.ts","webpack:///./src/app/pages/server/components/serverValuesForm/components/timezoneInput/timezone.service.ts","webpack:///./src/app/pages/server/components/serverValuesForm/index.ts","webpack:///./src/app/pages/server/components/serverValuesForm/serverValuesForm.component.ts","webpack:///./src/app/pages/server/server.routing.ts","webpack:///./src/rxjs-operators.ts","webpack:///./src/app/pages/server/server.component.scss","webpack:///./src/app/pages/server/components/serverValuesForm/components/dnssuffixInput/dnssuffixInput.html","webpack:///./src/app/pages/server/components/serverValuesForm/components/gatewayInput/gatewayInput.html","webpack:///./src/app/pages/server/components/serverValuesForm/components/hostnameInput/hostnameInput.html","webpack:///./src/app/pages/server/components/serverValuesForm/components/ipaddressInput/ipaddressInput.html","webpack:///./src/app/pages/server/components/serverValuesForm/components/netmaskInput/netmaskInput.html","webpack:///./src/app/pages/server/components/serverValuesForm/components/timezoneInput/timeZoneInput.html","webpack:///./src/app/pages/server/components/serverValuesForm/serverValuesForm.html","webpack:///./src/app/pages/server/server.component.html"],"names":[],"mappings":"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","file":"2.chunk.js","sourcesContent":["import { NgModule }      from '@angular/core';\nimport { CommonModule }  from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgaModule } from '../../theme/nga.module';\nimport { routing } from './server.routing';\n\nimport { ServerComponent } from './server.component';\n\nimport { ServerValuesForm } from './components/serverValuesForm';\n\nimport { TimeZoneInput } from './components/serverValuesForm/components/timezoneInput/timeZoneInput.component';\nimport { HostNameInput } from './components/serverValuesForm/components/hostnameInput/hostnameInput.component';\nimport { DNSSuffixInput } from './components/serverValuesForm/components/dnssuffixInput/dnssuffixInput.component';\nimport { IpAddressInput } from './components/serverValuesForm/components/ipaddressInput/ipaddressInput.component';\nimport { NetmaskInput } from './components/serverValuesForm/components/netmaskInput/netmaskInput.component';\nimport { GatewayInput } from './components/serverValuesForm/components/gatewayInput/gatewayInput.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgaModule,\n    routing\n  ],\n  declarations: [\n    ServerComponent,\n    ServerValuesForm,\n    TimeZoneInput,\n    HostNameInput,\n    DNSSuffixInput,\n    IpAddressInput,\n    NetmaskInput,\n    GatewayInput\n  ]\n})\nexport class ServerModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/server/server.module.ts","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar catch_1 = require('../../operator/catch');\nObservable_1.Observable.prototype.catch = catch_1._catch;\nObservable_1.Observable.prototype._catch = catch_1._catch;\n//# sourceMappingURL=catch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/catch.js\n// module id = 647\n// module chunks = 0 2","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar toPromise_1 = require('../../operator/toPromise');\nObservable_1.Observable.prototype.toPromise = toPromise_1.toPromise;\n//# sourceMappingURL=toPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/toPromise.js\n// module id = 657\n// module chunks = 0 2","\"use strict\";\nvar root_1 = require('../util/root');\n/* tslint:enable:max-line-length */\n/**\n * Converts an Observable sequence to a ES2015 compliant promise.\n *\n * @example\n * // Using normal ES2015\n * let source = Rx.Observable\n *   .of(42)\n *   .toPromise();\n *\n * source.then((value) => console.log('Value: %s', value));\n * // => Value: 42\n *\n * // Rejected Promise\n * // Using normal ES2015\n * let source = Rx.Observable\n *   .throw(new Error('woops'))\n *   .toPromise();\n *\n * source\n *   .then((value) => console.log('Value: %s', value))\n *   .catch((err) => console.log('Error: %s', err));\n * // => Error: Error: woops\n *\n * // Setting via the config\n * Rx.config.Promise = RSVP.Promise;\n *\n * let source = Rx.Observable\n *   .of(42)\n *   .toPromise();\n *\n * source.then((value) => console.log('Value: %s', value));\n * // => Value: 42\n *\n * // Setting via the method\n * let source = Rx.Observable\n *   .of(42)\n *   .toPromise(RSVP.Promise);\n *\n * source.then((value) => console.log('Value: %s', value));\n * // => Value: 42\n *\n * @param PromiseCtor promise The constructor of the promise. If not provided,\n * it will look for a constructor first in Rx.config.Promise then fall back to\n * the native Promise constructor if available.\n * @return {Promise<T>} An ES2015 compatible promise with the last value from\n * the observable sequence.\n * @method toPromise\n * @owner Observable\n */\nfunction toPromise(PromiseCtor) {\n    var _this = this;\n    if (!PromiseCtor) {\n        if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n            PromiseCtor = root_1.root.Rx.config.Promise;\n        }\n        else if (root_1.root.Promise) {\n            PromiseCtor = root_1.root.Promise;\n        }\n    }\n    if (!PromiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return new PromiseCtor(function (resolve, reject) {\n        var value;\n        _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n    });\n}\nexports.toPromise = toPromise;\n//# sourceMappingURL=toPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/toPromise.js\n// module id = 658\n// module chunks = 0 2","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'server',\n  templateUrl: './server.component.html',\n  styleUrls: ['./server.component.scss']\n})\nexport class ServerComponent {\n  constructor() { }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/server/server.component.ts","import { Injectable } from \"@angular/core\";\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class DNSSuffixService {\n\n    constructor(private http: Http) {\n    }\n\n    getData() : Promise<string> {\n        return this.http.get('/api/dnssuffix')\n            .toPromise()\n            .then(this.extractData)\n            .catch(this.handleError);\n    }\n\n    private extractData(res: Response) {\n        let body = res.json();\n        return body.dnssuffix;\n    }\n\n    private handleError(error: any) {\n        // In a real world app, we might use a remote logging infrastructure\n        // We'd also dig deeper into the error to get a better message\n        let errMsg = (error.message) ? error.message :\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/server/components/serverValuesForm/components/dnssuffixInput/dnssuffix.service.ts","import { Component } from \"@angular/core\";\nimport { DNSSuffixService } from \"./dnssuffix.service\"\n\n@Component({\n    selector : \"dnssuffix-input\",\n    templateUrl : \"./dnssuffixInput.html\",\n    providers: [DNSSuffixService]\n})\nexport class DNSSuffixInput {\n    \n    constructor(private _dnsSuffixService: DNSSuffixService){\n        this.getDNSSuffix();\n    }\n\n    public dnsSuffix: string = '';\n    private errorMessage: any = '';\n\n    getDNSSuffix() {\n        this._dnsSuffixService.getData()\n            .then(dnsSuffix => this.dnsSuffix = dnsSuffix)\n            .catch(error => this.errorMessage = <any>error);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/server/components/serverValuesForm/components/dnssuffixInput/dnssuffixInput.component.ts","import { Injectable } from \"@angular/core\";\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class GatewayService {\n\n    constructor(private http: Http) {\n    }\n\n    getData() : Promise<string> {\n        return this.http.get('/api/gateway')\n            .toPromise()\n            .then(this.extractData)\n            .catch(this.handleError);\n    }\n\n    private extractData(res: Response) {\n        let body = res.json();\n        return body.gateway;\n    }\n\n    private handleError(error: any) {\n        // In a real world app, we might use a remote logging infrastructure\n        // We'd also dig deeper into the error to get a better message\n        let errMsg = (error.message) ? error.message :\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/server/components/serverValuesForm/components/gatewayInput/gateway.service.ts","import { Component } from '@angular/core';\nimport { GatewayService } from './gateway.service'\n\n@Component({\n    selector : \"gateway-input\",\n    templateUrl : \"gatewayInput.html\",  \n    providers: [GatewayService]\n})\nexport class GatewayInput {\n    \n    constructor(private _gatewayService: GatewayService) {\n        this.getGateway();\n    }\n\n    public gateway: string = '';\n    private errorMessage: any = '';\n\n    getGateway() {\n        this._gatewayService.getData()\n            .then(gateway => this.gateway = gateway)\n            .catch(error => this.errorMessage = <any>error);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/server/components/serverValuesForm/components/gatewayInput/gatewayInput.component.ts","import { Injectable } from \"@angular/core\";\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class HostNameService {\n\n    constructor(private http: Http) {\n    }\n\n    getData() : Promise<string> {\n        return this.http.get('/api/hostname')\n            .toPromise()\n            .then(this.extractData)\n            .catch(this.handleError);\n    }\n\n    private extractData(res: Response) {\n        let body = res.json();\n        return body.hostname;\n    }\n\n    private handleError(error: any) {\n        // In a real world app, we might use a remote logging infrastructure\n        // We'd also dig deeper into the error to get a better message\n        let errMsg = (error.message) ? error.message :\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/server/components/serverValuesForm/components/hostnameInput/hostname.service.ts","import { Component } from '@angular/core';\nimport { HostNameService } from './hostname.service'\n\n@Component({\n    selector : \"hostname-input\",\n    templateUrl : \"hostnameInput.html\",  \n    providers: [HostNameService]\n})\nexport class HostNameInput {\n    \n    constructor(private _hostnameService: HostNameService) {\n        this.getHostName();\n    }\n\n    public hostname: string = '';\n    private errorMessage: any = '';\n\n    getHostName() {\n        this._hostnameService.getData()\n            .then(hostname => this.hostname = hostname)\n            .catch(error => this.errorMessage = <any>error);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/server/components/serverValuesForm/components/hostnameInput/hostnameInput.component.ts","import { Injectable } from \"@angular/core\";\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class IpAddressService {\n\n    constructor(private http: Http) {\n    }\n\n    getData() : Promise<string> {\n        return this.http.get('/api/ipaddress')\n            .toPromise()\n            .then(this.extractData)\n            .catch(this.handleError);\n    }\n\n    private extractData(res: Response) {\n        let body = res.json();\n        return body.ipaddress;\n    }\n\n    private handleError(error: any) {\n        // In a real world app, we might use a remote logging infrastructure\n        // We'd also dig deeper into the error to get a better message\n        let errMsg = (error.message) ? error.message :\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/server/components/serverValuesForm/components/ipaddressInput/ipaddress.service.ts","import { Component } from '@angular/core';\nimport { IpAddressService } from './ipaddress.service'\n\n@Component({\n    selector : \"ipaddress-input\",\n    templateUrl : \"ipaddressInput.html\",  \n    providers: [IpAddressService]\n})\nexport class IpAddressInput {\n    \n    constructor(private _ipaddressService: IpAddressService) {\n        this.getIpAddress();\n    }\n\n    public ipaddress: string = '';\n    private errorMessage: any = '';\n\n    getIpAddress() {\n        this._ipaddressService.getData()\n            .then(ipaddress => this.ipaddress = ipaddress)\n            .catch(error => this.errorMessage = <any>error);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/server/components/serverValuesForm/components/ipaddressInput/ipaddressInput.component.ts","import { Injectable } from \"@angular/core\";\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class NetmaskService {\n\n    constructor(private http: Http) {\n    }\n\n    getData() : Promise<string> {\n        return this.http.get('/api/netmask')\n            .toPromise()\n            .then(this.extractData)\n            .catch(this.handleError);\n    }\n\n    private extractData(res: Response) {\n        let body = res.json();\n        return body.netmask;\n    }\n\n    private handleError(error: any) {\n        // In a real world app, we might use a remote logging infrastructure\n        // We'd also dig deeper into the error to get a better message\n        let errMsg = (error.message) ? error.message :\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/server/components/serverValuesForm/components/netmaskInput/netmask.service.ts","import { Component } from '@angular/core';\nimport { NetmaskService } from './netmask.service'\n\n@Component({\n    selector : \"netmask-input\",\n    templateUrl : \"netmaskInput.html\",  \n    providers: [NetmaskService]\n})\nexport class NetmaskInput {\n    \n    constructor(private _netmaskService: NetmaskService) {\n        this.getNetmask();\n    }\n\n    public netmask: string = '';\n    private errorMessage: any = '';\n\n    getNetmask() {\n        this._netmaskService.getData()\n            .then(netmask => this.netmask = netmask)\n            .catch(error => this.errorMessage = <any>error);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/server/components/serverValuesForm/components/netmaskInput/netmaskInput.component.ts","import { Component } from '@angular/core';\nimport { TimeZoneService } from './timezone.service';\nimport { TimeZone } from './timezone';\n\n@Component({\n    selector: 'timezone-input',\n    templateUrl: 'timeZoneInput.html',\n    providers: [TimeZoneService]\n})\nexport class TimeZoneInput {\n\n    constructor(private _timeZoneService: TimeZoneService) {\n        this.getTimeZones();\n    }\n\n    public timezones: TimeZone[];\n    private errorMessage: any = '';\n\n    getTimeZones() {\n        this._timeZoneService.getData()\n            .then(timezones => this.timezones = timezones)\n            .catch(error => this.errorMessage = <any>error);\n    }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/server/components/serverValuesForm/components/timezoneInput/timeZoneInput.component.ts","import { Injectable } from \"@angular/core\";\nimport { TimeZone } from './timezone';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class TimeZoneService {\n    constructor(private http: Http) {\n    }\n\n    getData() : Promise<TimeZone[]> {\n        return this.http.get('/api/timezones')\n            .toPromise()\n            .then(this.extractData)\n            .catch(this.handleError);\n    }\n\n    private extractData(res: Response) {\n        let body = res.json();\n        return body || [];\n    }\n\n    private handleError(error: any) {\n        // In a real world app, we might use a remote logging infrastructure\n        // We'd also dig deeper into the error to get a better message\n        let errMsg = (error.message) ? error.message :\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/server/components/serverValuesForm/components/timezoneInput/timezone.service.ts","export * from './serverValuesForm.component';\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/server/components/serverValuesForm/index.ts","import { Component } from '@angular/core';\nimport '../../../../../rxjs-operators';\n\n@Component({\n  selector: 'server-values-form',\n  templateUrl: './serverValuesForm.html',\n})\nexport class ServerValuesForm {\n\n  isEditMode: boolean;\n  constructor() {\n    this.isEditMode = false;\n  }\n\n  edit() {\n    this.isEditMode = true;\n  }\n\n  view() {\n    this.isEditMode = false;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/server/components/serverValuesForm/serverValuesForm.component.ts","import { Routes, RouterModule } from '@angular/router';\n\nimport { ServerComponent } from './server.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ServerComponent\n  }\n];\n\nexport const routing = RouterModule.forChild(routes);\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/server/server.routing.ts","import 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\n\n// WEBPACK FOOTER //\n// ./src/rxjs-operators.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/server/server.component.scss\n// module id = 740\n// module chunks = 2","module.exports = \"<div class=\\\"form-group\\\">\\n    <label for=\\\"dnssuffix\\\">DNS Suffix</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dnssuffix\\\" name=\\\"dnssuffix\\\" placeholder=\\\"DNS Suffix\\\" value=\\\"{{dnsSuffix}}\\\" required>\\n    <span class=\\\"help-block error-block basic-block\\\">Required</span>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/server/components/serverValuesForm/components/dnssuffixInput/dnssuffixInput.html\n// module id = 813\n// module chunks = 2","module.exports = \"<div class=\\\"form-group\\\">\\n    <label for=\\\"gateway\\\">Default Gateway</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"gateway\\\" name=\\\"gateway\\\" placeholder=\\\"Default Gateway\\\" value={{gateway}} required>\\n    <span class=\\\"help-block error-block basic-block\\\">Required</span>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/server/components/serverValuesForm/components/gatewayInput/gatewayInput.html\n// module id = 814\n// module chunks = 2","module.exports = \"<div class=\\\"form-group\\\">\\n    <label for=\\\"hostname\\\">Hostname</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"hostname\\\" name=\\\"hostname\\\" placeholder=\\\"Hostname\\\" value=\\\"{{hostname}}\\\" required>\\n    <span class=\\\"help-block error-block basic-block\\\">Required</span>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/server/components/serverValuesForm/components/hostnameInput/hostnameInput.html\n// module id = 815\n// module chunks = 2","module.exports = \"<div class=\\\"form-group\\\">\\n    <label for=\\\"exampleInputEmail1\\\">IP Address</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ip\\\" name=\\\"ip\\\" placeholder=\\\"IP Address\\\" value={{ipaddress}} required>\\n    <span class=\\\"help-block error-block basic-block\\\">Required</span>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/server/components/serverValuesForm/components/ipaddressInput/ipaddressInput.html\n// module id = 816\n// module chunks = 2","module.exports = \"<div class=\\\"form-group\\\">\\n    <label for=\\\"exampleInputEmail1\\\">Netmask</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"netmask\\\" name=\\\"netmask\\\" placeholder=\\\"Netmask\\\" value={{netmask}} required>\\n    <span class=\\\"help-block error-block basic-block\\\">Required</span>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/server/components/serverValuesForm/components/netmaskInput/netmaskInput.html\n// module id = 817\n// module chunks = 2","module.exports = \"<div class=\\\"form-group\\\">\\n    <label for=\\\"timezone\\\">Timezone</label>\\n    <select class=\\\"form-control\\\" id=\\\"timezone\\\">\\n        <option *ngFor=\\\"let timezone of timezones\\\">{{timezone.name}}</option>\\n    </select>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/server/components/serverValuesForm/components/timezoneInput/timeZoneInput.html\n// module id = 818\n// module chunks = 2","module.exports = \"<form name=\\\"vm.personalInfoForm\\\" novalidate>\\n    <ba-card cardTitle=\\\"Server Configuration\\\" baCardClass=\\\"with-scroll\\\">\\n        <fieldset [disabled]=\\\"!isEditMode\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <div>\\n                        <hostname-input></hostname-input>\\n                        <dnssuffix-input></dnssuffix-input>\\n                        <ipaddress-input></ipaddress-input>\\n                        <netmask-input></netmask-input>\\n                        <gateway-input></gateway-input>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div>\\n                        <timezone-input></timezone-input>\\n                    </div>\\n                </div>\\n            </div>\\n        </fieldset>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-8\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary float-left\\\" (click)=\\\"edit()\\\" [hidden]=\\\"isEditMode\\\">Edit</button>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary float-right\\\" (click)=\\\"view()\\\" [hidden]=\\\"!isEditMode\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary float-right\\\" (click)=\\\"view()\\\" [hidden]=\\\"!isEditMode\\\">Save</button>\\n            </div>\\n        </div>\\n    </ba-card>\\n</form>\\n\\n\\n<!-- <form>\\n    <ba-card cardTitle=\\\"Server Configuration\\\" baCardClass=\\\"with-scroll\\\">\\n        <div class=\\\"row form-group\\\">\\n            <div class=\\\"form-horizontal\\\">\\n            <label for=\\\"hostname\\\" class=\\\"col-xs-2 control-label\\\">Hostname:</label>\\n            <div class=\\\"col-xs-3\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"hostname\\\" placeholder=\\\"Hostname\\\" />\\n            </div>\\n            <div class=\\\"col-xs-1\\\"></div>\\n            <label for=\\\"timezone\\\" class=\\\"col-xs-2 control-label\\\">Time Zone:</label>\\n            <div class=\\\"btn-group btn-input clearfix\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle form-control\\\" data-toggle=\\\"dropdown\\\">\\n                <span data-bind=\\\"label\\\">{{timezone}}</span>&nbsp;<span class=\\\"caret\\\"></span>\\n            </button>\\n            <ul class=\\\"dropdown-menu scrollable-menu\\\" role=\\\"menu\\\">\\n                <li ng-repeat=\\\"timezone in timezonesList\\\"><a ng-click=\\\"dropdownItemSelected(timezone, $event)\\\">{{timezone.name}}</a></li>\\n            </ul>\\n            </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row form-group\\\">\\n            <div class=\\\"form-horizontal\\\">\\n            <label for=\\\"dnssuffix\\\" class=\\\"col-xs-2 control-label\\\">DNS Suffix:</label>\\n            <div class=\\\"col-xs-3\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"dnssuffix\\\" placeholder=\\\"DNS Sufix\\\" />\\n            </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row form-group\\\">\\n            <div class=\\\"form-horizontal\\\">\\n            <label for=\\\"ip\\\" class=\\\"col-xs-2 control-label\\\">IP Address:</label>\\n            <div class=\\\"col-xs-3\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"ip\\\" placeholder=\\\"IP\\\" />\\n                <span class=\\\"glyphicon form-control-feedback\\\" ng-class=\\\"{'glyphicon-ok': serverForm.ipaddress.$valid, 'glyphicon-remove': serverForm.ipaddress.$invalid}\\\" aria-hidden=\\\"true\\\"></span>\\n            </div>\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"row form-group\\\">\\n            <div class=\\\"form-horizontal\\\">\\n            <label for=\\\"netmask\\\" class=\\\"col-xs-2 control-label\\\">Netmask:</label>\\n            <div class=\\\"col-xs-3\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"netmask\\\" netmask placeholder=\\\"Netmask\\\" />\\n                <span class=\\\"glyphicon form-control-feedback\\\" ng-class=\\\"{'glyphicon-ok': serverForm.netmask.$valid, 'glyphicon-remove': serverForm.netmask.$invalid}\\\" aria-hidden=\\\"true\\\"></span>\\n            </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row form-group\\\">\\n            <div class=\\\"form-horizontal\\\">\\n            <label for=\\\"gateway\\\" class=\\\"col-xs-2 control-label\\\">Default Gateway:</label>\\n            <div class=\\\"col-xs-3\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"gateway\\\" placeholder=\\\"Default Gateway\\\" />\\n            </div>\\n            </div>\\n        </div>\\n        <hr />\\n\\n        <div class=\\\"row form-group js-dns_form_field\\\">\\n            <div class=\\\"form-horizontal\\\">\\n            <label for=\\\"dns1\\\" class=\\\"col-xs-2 control-label\\\">DNS <span class=\\\"dns-number\\\">1</span>:</label>\\n            <div class=\\\"col-xs-3\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"dns1\\\" placeholder=\\\"DNS 1\\\" />\\n            </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row form-group js-dns_form_field\\\">\\n            <div class=\\\"form-horizontal\\\">\\n            <label for=\\\"dns2\\\" class=\\\"col-xs-2 control-label\\\">DNS <span class=\\\"dns-number\\\">2</span>:</label>\\n            <div class=\\\"col-xs-3\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"dns2\\\" placeholder=\\\"DNS 2\\\" />\\n            </div>\\n            <div class=\\\"col-xs-3\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary js-btn-adddns\\\" ng-click=\\\"addDNS()\\\">Add</button>\\n            </div>\\n            </div>\\n        </div>\\n        <hr />\\n\\n        <div class=\\\"row form-group js-ntpserver_form_field\\\">\\n            <div class=\\\"form-horizontal\\\">\\n            <label for=\\\"ntpserver1\\\" class=\\\"col-xs-2 control-label\\\">NTP Server <span class=\\\"ntpserver-number\\\">1</span>:</label>\\n            <div class=\\\"col-xs-3\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"ntpserver1\\\" placeholder=\\\"NTP Server 1\\\" />\\n            </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row form-group js-ntpserver_form_field\\\">\\n            <div class=\\\"form-horizontal\\\">\\n            <label for=\\\"ntpserver2\\\" class=\\\"col-xs-2 control-label\\\">NTP Server <span class=\\\"ntpserver-number\\\">2</span>:</label>\\n            <div class=\\\"col-xs-3\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"ntpserver2\\\" placeholder=\\\"NTP Server 2\\\" />\\n            </div>\\n            <div class=\\\"col-xs-3\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary js-btn-addntpserver\\\" ng-click=\\\"addNTPServer()\\\">Add</button>\\n            </div>\\n            </div>\\n        </div>\\n    </ba-card>\\n</form> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/server/components/serverValuesForm/serverValuesForm.html\n// module id = 819\n// module chunks = 2","module.exports = \"<baWizzard>\\n    <baWizzardStep [title]=\\\"'Server Values'\\\">\\n        <server-values-form></server-values-form>\\n    </baWizzardStep>\\n\\n    <baWizzardStep [title]=\\\"'Second Form Step'\\\">\\n        Second Step\\n    </baWizzardStep>\\n\\n    <baWizzardStep [title]=\\\"'Third Form Step'\\\">\\n        <server-values-form></server-values-form>\\n    </baWizzardStep>\\n\\n    <baWizzardStep [title]=\\\"'Forth Form Step'\\\">\\n        Forth form!!!\\n    </baWizzardStep>\\n\\n    <baWizzardStep [title]=\\\"'Fifth Form Step'\\\">\\n        Fifth form!!!\\n    </baWizzardStep>\\n\\n    <baWizzardStep [title]=\\\"'Sixth Form Step'\\\">\\n        Sixth form!!!\\n    </baWizzardStep>\\n</baWizzard>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/server/server.component.html\n// module id = 820\n// module chunks = 2"],"sourceRoot":""}